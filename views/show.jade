extends ./layout.jade

block content
    #nodeId= node._id
    .well
        span.lead!= node.name
        #labels
            each l in node.labels
                a(href=labelquery(l))
                    span.label(class="label-primary small margin-10")= l
            #newLabel
                
        h5.section-heading PROPERTIES
            
        dl#properties.dl-horizontal
            each p in node.properties()
                dt= p
                dd!= node[p]

        h5.section-heading ADD A NEW PROPERTY
        
        form#addPropertyForm.form-inline
            .form-group
                input(type="hidden" name="nodeId" value=node._id)
                label.sr-only(for="propertyName") Property
                input.form-control(type="text" name="propertyName" placeholder="Property Name")
                label.sr-only(for="propertyValue") Value
                input.form-control(type="text" name="propertyValue" placeholder="Property Value")
                a#addPropertyButton(class="btn btn-default") add
        
        .vertical-strut-20
        
        h5.section-heading RELATIONSHIPS
        
        table#relationshipTable.table
            each r in node.relationships
                tr
                    if (r.direction === "in")
                        td
                            a(href=r.nodeId)!= r.nodeName
                            each l in r.labels
                                a(href=labelquery(l))
                                    span.label(class="label label-primary small margin-10")= l
                    else
                        td= node.name
                    td= r.type
                    if (r.direction === "out")
                        td
                            a(href=r.nodeId)!= r.nodeName
                            each l in r.labels
                                a(href=labelquery(l))
                                    span.label(class="label label-primary small margin-10")= l
                    else
                        td= node.name
                    td 
                        a(href="javascript:deleteRelationship("+r.id+")") delete
        .vertical-strut-20
        
        h5.section-heading ADD A NEW RELATIONSHIP
        form#addRelationshipForm.form-inline
            .form-group
                table
                    tr
                        td
                            a#swapDirection.btn(class="btn-default")
                                span.glyphicon(class="glyphicon-resize-horizontal")
                            label.sr-only(for="relDirection")
                            input(type="hidden" id="relDirection" name="relDirection" value="out")
                            input(type="hidden" name="fromNodeId" value=node._id)
                        td#Outbound
                            #fromNodeGroup
                                label.sr-only(for="fromNodeName") From
                                input.form-control(type="text" id="fromNodeName" name="fromNodeName" value=node.name readonly)
                        td
                            label.sr-only(for="type") Type
                            input.form-control(type="text" id="relType" name="relType" placeholder="Relationship")
                        td#Inbound
                            #toNodeGroup
                                label.sr-only(for="node") To
                                input.form-control(type="text" id="toNodeName" name="toNodeName" placeholder="Node")
                        td
                            a#addRelationship(class="btn btn-default") add
                    
block finalScript
    script.
        $('#relType').typeahead({
            hint: true,
            highlight: true,
            minLength: 1
            }, {
            name: 'relationshipcomplete',
            displayKey: 'type',
            source: relationshipcomplete.ttAdapter()
        });
        
        $('#toNodeName').typeahead(null, {
            name: 'nodecomplete', 
            displayKey: 'name', 
            source: nodecomplete.ttAdapter()
        });
        
        var addRelationship = function(rel) { 
            var nodeLink = $('<a/>').text(rel.nodeName).attr('href', rel.nodeId);
            var relType = $('<td/>').text(rel.type);
            var fromNode = $('<td/>');
            var toNode = $('<td/>');
            var delLink = $('<a/>').text("delete").attr('href', 'javascript:deleteRelationship('+rel.id+')');

            var delRel = $('<td/>').append(delLink);
            if (rel.direction == "in") {
                fromNode.append(nodeLink);
                toNode.text('#{node.name}');
            } else {
                fromNode.text('#{node.name}');
                toNode.append(nodeLink);
            }
            var relRow = $('<tr/>').append(fromNode).append(relType).append(toNode).append(delRel);
                $('#relationshipTable').append(relRow);      
        }
        
        var addProperty = function(prop) {
            $('#properties').append($('<dt/>').text(prop.name));
            $('#properties').append($('<dd/>').text(prop.value));
        };
        
        $('#swapDirection').click(function() { 
            var direction = $('#relDirection');
            var relControl = $('#relType');
            var toNode = $('#toNodeGroup');
            var fromNode = $('#fromNodeGroup');
            if (direction.attr('value') == "out") { 
                direction.attr('value', 'in');
                $('#Outbound').append(toNode);
                $('#Inbound').append(fromNode);
                // toNode.insertBefore(relControl);
                // fromNode.insertAfter(relControl);
            } else {
                direction.attr('value', 'out');
                $('#Outbound').append(fromNode);
                $('#Inbound').append(toNode);
                // fromNode.insertBefore(relControl);
                // toNode.insertAfter(relControl);
            }
            console.log("Direction is now " + direction.attr('value'));
        });
        
        $('#addRelationship').click(function() { 
            console.log("Adding Relationship...");
            console.log($('#addRelationshipForm').serialize());
            $.post('createRelationship', $('#addRelationshipForm').serialize(), function(data) {
                addRelationship(data);
            }).fail(function(jqXhr, status, error) {
                alert(status + " error: " + error);
            });;
        });
                            
        $('#addPropertyButton').click(function() {
            console.log("Adding Property...");
            
            var values = {};
            values.nodeId = $('#addPropertyForm input[name=nodeId]')[0].value;
            values.propertyName = $('#addPropertyForm input[name=propertyName]')[0].value;
            values.propertyValue = $('#addPropertyForm input[name=propertyValue]')[0].value;
            
            console.log(JSON.stringify(values));
            
            $.post('set', values, function(data) {
                console.log(data); 
                addProperty(data);
            }).fail(function(error, status, message) {
                console.log(message + " " + error.responseText);
                alert( message + " " + error.responseText);
            });
        });
        
        labelize($('#newLabel'), primaryNodeId());